{"version":3,"file":"static/js/489.609bc919.chunk.js","mappings":"qKAsBA,IAnBe,WACX,OACI,SAAC,KAAD,CACAA,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEhBC,iBAAiB,GACjBC,SAAS,GAGhB,C,4MClBYC,EAAMC,EAAAA,EAAAA,KAAH,8DAKHC,EAAQD,EAAAA,EAAAA,MAAH,kZAoBLE,EAASF,EAAAA,EAAAA,OAAH,wT,SCtBNG,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC3B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBI,OACI,UAACR,EAAD,CAAKK,SAXQ,SAAAI,GAGjB,GAFAA,EAAMC,iBAEoB,KAAvBH,EAAYI,OACX,OAAOC,EAAAA,GAAAA,MAAY,+CAGvBP,EAASE,GACTC,EAAe,GAClB,EAEO,WACI,SAACN,EAAD,CACAW,KAAK,OACLC,YAAY,gBACZC,MAAOR,EACPS,SArBS,SAAAP,GACjBD,EAAeC,EAAMQ,cAAcF,MAAMG,cAC5C,KAqBW,SAACf,EAAD,CAEAU,KAAK,SAFL,sBAOX,EClCYb,EAAMC,EAAAA,EAAAA,IAAH,6CAIHkB,EAAOlB,EAAAA,EAAAA,GAAH,6GAQJmB,EAAOnB,EAAAA,EAAAA,GAAH,qEAKJoB,GAAapB,EAAAA,EAAAA,GAAOqB,EAAAA,GAAPrB,CAAH,gD,SC2CvB,EAvDe,WAAO,IAAD,EACXsB,GAAWC,EAAAA,EAAAA,MACjB,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,QAArC,eAAOqB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAW,UAAGuB,EAAaE,IAAI,gBAApB,QAAgC,IAEnDC,EAAAA,EAAAA,YAAU,WACR,GAAK1B,EAAL,CAIA,IAAM2B,EAAS,mCAAG,6FAChBN,EAAU,WADM,mBAGUO,EAAAA,EAAAA,IAAY5B,GAHtB,mBAIQ,KADf6B,EAHO,EAGPA,SACIC,OAJG,yCAKLzB,EAAAA,GAAAA,MACJ,6EANS,OAQdc,GAAU,OAAIU,IACdR,EAAU,YATI,kDAWdA,EAAU,YACVU,QAAQC,MAAR,MAZc,0DAAH,qDAgBfL,GAlBG,CAmBJ,GAAE,CAAC3B,IAOA,OACE,UAAC,EAAD,YACA,SAACH,EAAD,CAAWC,SANI,SAAAU,GACnBgB,EAAgB,CAAES,MAAM,GAAD,OAAKzB,IAC7B,IAKKU,EAAOY,OAAS,IAEpB,SAAClB,EAAD,iBACCM,QADD,IACCA,OADD,EACCA,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACX,SAACvB,EAAD,WACF,SAACC,EAAD,CAAqBqB,GAAIA,EAAIE,GAAE,UAAKF,GAAMC,MAAOA,EAAOE,MAAO,CAACC,KAAMvB,GAAtE,SAAkFoB,GAAjED,IADJA,EADA,MAOE,YAAXf,IAAyB,SAACoB,EAAA,EAAD,MAIhC,C","sources":["components/Loader/Loader.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from  'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots \n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#ff4000\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }}\n        wrapperClassName=\"\"\n        visible={true}\n        />\n    )\n}\n\nexport default Loader;","import styled from '@emotion/styled';\n\nexport const Box = styled.form`\nmargin-bottom: 20px;\ndisplay: flex;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  padding: 5px;\n  width: 300px;\n  font: inherit;\n  font-size: 20px;\n  border: 2px solid #808080;\n  border-radius: 4px;\n  padding-left: 4px;\n  padding-right: 4px;\n    \n    :focus-within {\n    border: 2px solid #5959a6;\n    outline: 1px solid transparent;\n  }\n  :hover {\n    border: 2px solid #5959a6;\n    outline: 1px solid transparent;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 70px;\n  border: 2px solid #808080;\n  border-radius: 4px;\n  color: #1a1a1a;;\n  background-color: ##F5F5F5;\n  cursor: pointer;\n\n  :hover {\n    border: 2px solid #8d8d8d;\n    outline: 1px solid transparent;\n    background-color: #b0b0b0;\n  }\n\n`","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport  {Box, Input, Button } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({onSubmit}) => {\nconst [searchQuery, setSearchQuery] = useState('');\n\nconst handleChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n};\n\n\nconst handleSubmit = event => {\n    event.preventDefault();\n\n    if(searchQuery.trim() === '') {\n        return toast.error(\"You cannot search by empty field. Try again\");\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n}\n    return (\n        <Box onSubmit={handleSubmit}>\n            <Input \n            type=\"text\"\n            placeholder=\"Search movies\" \n            value={searchQuery}\n            onChange={handleChange}\n            />\n            <Button \n            \n            type=\"submit\">Search</Button>\n        </Box>\n        \n    )\n    \n};","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\n\nexport const Box = styled.div`\npadding: 20px 50px;\n`;\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nmargin: 0;\npadding: 0;\nlist-style: none;\n`;\n\nexport const Item = styled.li`\nmargin-bottom: 5px;\ntext-decoration: none;\n`;\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\n`;","import { searchMovie } from \"../../service/movieApi\";\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { SearchBox } from \"../../components/SearchBox/SearchBox\";\nimport {Box, List, Item, StyledLink } from \"./Movies.styled\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from \"../../components/Loader/Loader\";\n\nconst Movies = () => {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get(\"query\") ?? \"\";\n  \n  useEffect(() => {\n    if (!searchQuery) {\n        return\n      }\n\n    const fetchData = async () => {\n      setStatus('pending');\n      try {\n        const {results} = await searchMovie(searchQuery);\n        if(results.length === 0 ) {\n          return toast.error(\n             'Sorry, there are no movies matching your search query. Please try again.');\n        }\n        setMovies([...results]);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n\n  const handleSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n  \n      return (\n        <Box>\n        <SearchBox onSubmit={handleSubmit} />\n       {movies.length > 0 && (\n       \n    <List>\n    {movies?.map(({ id, title }) => (\n      <Item key={id}>\n    <StyledLink key={id} id={id} to={`${id}`} title={title} state={{from: location}}>{title}</StyledLink>\n    </Item>\n  ))}\n  </List>\n       )}\n       {status === \"pending\"  && <Loader />}     \n    </Box>\n    \n    )\n};\n\nexport default Movies;"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClassName","visible","Box","styled","Input","Button","SearchBox","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","toast","type","placeholder","value","onChange","currentTarget","toLowerCase","List","Item","StyledLink","Link","location","useLocation","movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","searchMovie","results","length","console","error","query","map","id","title","to","state","from","Loader"],"sourceRoot":""}